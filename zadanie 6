//Создайте двумерный массив целых чисел. Удалите из него строку и столбец, на пересечении которых расположен минимальный элемент.
#include<iostream>
using namespace std;
void print_array(int** array, int a, int e) {
	for (int i; i < a; i++) {
		for (int j; j < e; j++) {
			cout << array[i][j]<< '\t';
		}
		cout << endl;
	}
}
void random_array(int** array, int a,int e) {
	for (int i; i < a; i++) {
		for (int j; j < e; j++) {
			array[i][j] = rand() % 5;
		}
	}
}
void delete_array(int **array,int a){
	for (int i; i < a; i++) {
		delete[] array[i];
	}
	delete[] array;
}
void min(int** array,int a,int e,int&q,int&w )
{
	q = 0; w = 0;

	for (int i = 0; i < a; i++)
		for (int j = 0; j < e; j++)
			if (array[i][j] < array[q][w])
			{
				q = i; w = j;
			}
}
int main() {
	srand(time(NULL));
	int a,e;
	cin >> a>>e;
	int** array = new int* [a];
	for (int i; i < a; i++) {
		array[i] = new int[e];
	}
	random_array(array, a,e);
	print_array(array, a,e);
	int q, w;
	min(array, a,e, q, w);
	int new_q = a - 1;
	int new_w = e - 1;
	int** array2 = new int* [new_q];
	for (int i; i < new_q; i++) {
		array2[i] = new int[new_w];
	}

	for (int i = 0; i < new_q; i++)
	{
		int lol = 0;
		for (int j = 0; j < new_w; j++)
		{
			if (j == e) lol = 1;

			array[i][j] = array2[i + (i >= a)][j + (j >= e)];
		}
	}
	print_array(array2, new_q, new_w);
	delete_array(array, a);
	delete_array(array2, new_q);
	return 0;
}

//Составьте программу, меняющую местами элементы матрицы симметрично побочной диагонали.
#include<iostream>
using namespace std;
int main() {
    setlocale(LC_ALL, "Rus");
    int N;
    cout << "Введите размер  матрицы:" << endl;
    cout << "N = ";
    cin >> N;
    int** arr = new int* [N];
    for (int i = 0; i < N; i++)
    {
        arr[i] = new int[N];
    }
    cout << "Введите матрицу:" << endl;
    for (int i = 0; i < N; i++)
    {
        for (int j = 0; j < N; j++)
        {
            cin >> arr[i][j];
        }
    }
    for (int i = 0; i < N; i++)
    {
        for (int j = 0; j < N - i - 1; j++)
        {
            swap(arr[i][j], arr[N - j - 1][N - i - 1]);
        }
    }
    cout << "Целевая матрица:" << endl;
    for (int i = 0; i < N; i++)
    {
        for (int j = 0; j < N; j++)
        {
            cout << arr[i][j] << " ";
        }
        cout << endl;
    }
    for (int i = 0; i < N; i++)
    {
        delete[] arr[i];
    }
    delete[] arr;
    system("pause");
    return 0;
}

//Наименьший элемент каждой строки прямоугольной таблицы, начиная со второй, замените наибольшим элементом предыдущей строки.
#include <iostream>
using namespace std;
int find_max(int* arr, int size);
int find_min_index(int* arr, int size);

int main()
{
    const int q = 10;
    const int w = 4;

    int arr[q][w];

    for (int i = 0; i < q; i++)
    {
        for (int j = 0; j < w; j++)
        {
            arr[i][j] = rand() % 10;
            cout << arr[i][j] << " ";
        }
       cout << "\n";
    }

    for (int i = q - 1; i >= 1; i--)
    {
        int temp = find_min_index(arr[i], w);
        arr[i][temp] = find_max(arr[i - 1], w);
    }

    cout << "\n\n";

    for (int i = 0; i < q; i++)
    {
        for (int j = 0; j < w; j++)
        {
            cout << arr[i][j] << " ";
        }
       cout << "\n";
    }
    return(0);
}

int find_max(int* arr, int size)
{
    int max = arr[0];
    for (int i = 1; i < size; i++)
        if (arr[i] > max) max = arr[i];

    return(max);
}

int find_min_index(int* arr, int size)
{
    int min = 0;
    for (int i = 1; i < size; i++)
        if (arr[i] < arr[min]) min = i;

    return 0;
}

//В квадратной таблице обменяйте местами элементы строки и столбца, на пересечении которых находится минимальный из положительных элементов.
#include <iostream>
#include <time.h>
#include <stdlib.h>

using namespace std;

int main()
{
    setlocale(LC_ALL, "Russian");
    time_t t;
    srand((unsigned)(&t));
    int arr[50][50];
    int N;
    cout << "минимальный из положительных элементов: " << endl;
    cin >> N;
    for (int i = 0; i < N; i++)
    {
        for (int j = 0; j < N; j++)
        {
            arr[i][j] = rand() % 20 - 10;
        }
    }
    int min = 3628;
    int im, jm;
    for (int i = 0; i < N; i++)
    {
        for (int j = 0; j < N; j++)
        {
            if (min > arr[i][j] && arr[i][j] > 0)
            {
                min = arr[i][j];
                im = i;
                jm = j;
            }
        }
    }

    for (int i = 0; i < N; i++)
    {
        for (int j = 0; j < N; j++)
        {
            cout << arr[i][j] << "\t";
        }
        cout << endl;
    }
    cout << endl << "min:" << min << " im:" << im << " jm:" << jm << endl;
    int c;
    for (int i = 0; i < N; i++)
    {
        for (int j = 0; j < N; j++)
        {
            if (i != im && j != jm)
            {
                c = arr[i][jm];
                arr[i][jm] = arr[im][j];
                arr[im][j] = c;
            }
        }
    }
    for (int i = 0; i < N; i++)
    {
        for (int j = 0; j < N; j++)
        {
            cout << arr[i][j] << "\t";
        }
        cout << endl;
    }
    return 0;
}
